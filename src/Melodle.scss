@use "sass:color";

body,
html {
    &:has(#melodle) {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        background-color: var(--white);
    }
}

.modal-content {
    border-radius: 5px;
    border: none;

    p {
        margin: 0;
    }

    .radio-group {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    &::backdrop {
        background: rgba(0, 0, 0, 0.5);
        /* Semi-transparent black background */
    }

    form {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    input[type="radio"] {
        display: none;
    }

    label {
        display: inline-block;
        padding: 0.5rem 1rem;
        border: 1px solid var(--black);
        border-radius: 5px;
        margin: 0.5rem;
        cursor: pointer;
        transition: background-color 0.2s ease-in-out;
    }

    input[type="radio"]:checked+label {
        background-color: var(--black);
        color: white;
    }
}

#root {
    height: 100%;
}

.game-container-container {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    height: 100%;
    align-items: center;
}

.game-container {
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: flex-start;
    min-width: 100dvw;
    padding: 0 1rem;

    header {
        grid-area: header;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        width: 100%;
        padding: 0;
        margin-bottom: 1rem;

        #header-text {
            display: flex;
            flex-direction: column;

            h1 {
                font-size: 4rem;
                margin: 0;
            }

            h2 {
                font-size: 2rem;
                margin: 0;
            }
        }

        #playButton {
            #play-button {
                transform-origin: 42.5px 50px;
                fill: var(--green);
            }

            #box-fill {
                fill: var(--green)
            }

            @keyframes spin {
                from {
                    transform: rotate(0deg);
                }

                to {
                    transform: rotate(720deg);
                }
            }

            #arm-group {
                transition: transform 0.5s ease-in-out;
                transform-origin: 80px 31.25px;

                &.playing {
                    transform: rotate(30deg);
                }
            }
        }
    }


    .squares {
        grid-area: squares;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: repeat(6, 3rem);
        grid-gap: 0.5rem;
        margin-bottom: 1rem;
        justify-self: flex-end;

        .square {
            display: flex;
            flex-direction: column;
            $white: var(--white);
            background-color: #ccc;
            border-radius: 5px;
            aspect-ratio: 1/1;

            font-size: 3rem;
            text-align: center;
            align-items: center;
            justify-content: center;

            &.correct {
                background-color: var(--green);
                color: var(--white);
                border: none;
            }

            &.wrongPosition {
                background-color: var(--orange);
                color: var(--black);
            }

            span {
                transform: translateY(2.5px);
            }
        }
    }

    .piano {
        width: 100%;
        margin-top: auto;

        .white-note {
            &.wrongPosition>.key {
                fill: var(--orange);
                color: var(--black);
            }

            &.correct>.key {
                fill: var(--green);
                color: var(--white);
            }

            &.incorrect>.key {
                fill: rgb(143, 143, 143);
                color: var(--black);
            }
        }

        .black-note {
            &.wrongPosition {
                .key {
                    fill: var(--orange);
                    color: var(--black);
                }

                .shadow {
                    fill: var(--dark-orange);
                }
            }

            &.correct {
                .key {
                    fill: var(--green);
                    color: var(--white);
                }
            }

            &.incorrect {
                .key {
                    fill: rgb(143, 143, 143);
                    color: var(--black);
                }
            }
        }
    }

    .buttons {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        width: 100%;
        padding: 0;
        margin: 0.5rem 0;
        font-size: 1rem;

        #submit {
            background-color: var(--green);

            &:disabled {
                background-color: grey;
                border: none;
                border-radius: 5px;
                padding: 1rem 2rem;
                font-size: 2rem;
                font-weight: bold;
                color: var(--white);
                cursor: pointer;
            }
        }

        #delete {
            &:disabled {
                path {
                    fill: grey;
                }

                line {
                    stroke: var(--white);
                }
            }
        }
    }
}

.btn-icon {
    background-color: transparent;
    border: none;
    padding: 0;

    // button with id of "submit" needs disabled styles
}

#share-button {
    margin-top: 1rem;
}


.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.modal-content {
    background: var(--white);
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    z-index: 1001;
}

.modal-content {
    margin: 3rem;
    display: flex;
    flex-direction: column;

    .dialog-header {
        display: flex;
        width: 100%;
        justify-content: space-between;

        h1 {
            text-align: center;
        }

        button {
            align-self: flex-start;
        }
    }
}

@media screen and (min-width: 1024px) {
    .game-container {
        min-width: 450px;
        padding: 1rem;
    }
}